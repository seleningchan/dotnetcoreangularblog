<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <TargetFramework>netcoreapp2.2</TargetFramework>
    <!-- Client path-->
    <SpaRoot>ClientApp\</SpaRoot>
    <TypeScriptToolsVersion>3.1</TypeScriptToolsVersion>
    <UserSecretsId>24dec880-1d4c-4d3c-8102-9aef836b6ee3</UserSecretsId>
    <LangVersion>7.1</LangVersion>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Wether enable the SSR -->
    <BuildServerSideRenderer>true</BuildServerSideRenderer>
  </PropertyGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <!-- Include necessary folders -->
  <ItemGroup>
    <Content Include="Upload\do-not-remove.txt" CopyToOutputDirectory="PreserveNewest"></Content>
    <Content Include="Upload\default\**" CopyToOutputDirectory="PreserveNewest"></Content>
    <Content Include="Logs\do-not-remove.txt" CopyToOutputDirectory="PreserveNewest"></Content>
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <!--There has some error if you don't rebuild this in docker/linux-->
  <Target Name="RebuildNodeSass" AfterTargets="DebugEnsureNodeEnv" Condition=" '$(Configuration)' == 'Debug'">
    <Message Importance="high" Text="Rebuilding node-sass..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm rebuild node-sass" />
  </Target>
  
  <!-- webpack -->
  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->

    <!--<Exec WorkingDirectory="$(SpaRoot)" Command="npm rebuild node-sass" />-->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm i" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr:prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- There's a cache file exceed the path length of windows file system, remove it. -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm i rimraf -g" />
    <Exec WorkingDirectory="$(SpaRoot)node_modules\" Command="rimraf .cache" />
    
    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**; " />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

  <ItemGroup>
    <PackageReference Include="AspectCore.Extensions.DependencyInjection" Version="1.2.0" />
    <PackageReference Include="AspectCore.Extensions.Reflection" Version="1.2.0" />
    <PackageReference Include="AutoMapper" Version="8.1.0" />
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="6.1.0" />
    <PackageReference Include="EasyCaching.InMemory" Version="0.5.6" />
    <PackageReference Include="EasyCaching.Interceptor.AspectCore" Version="0.5.6" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="2.2.4" />
    <PackageReference Include="Microsoft.Extensions.Configuration.Binder" Version="2.2.4" />
    <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.7.9" />
    <PackageReference Include="NETCore.Encrypt" Version="2.0.7" />
    <PackageReference Include="Serilog" Version="2.8.0" />
    <PackageReference Include="Serilog.Exceptions" Version="5.0.0" />
    <PackageReference Include="Serilog.Extensions.Logging" Version="2.0.4" />
    <PackageReference Include="Serilog.Extensions.Logging.File" Version="1.1.0" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="4.0.1" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.App" />
    <PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="2.2.0" PrivateAssets="All" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Extensions\" />
    <Folder Include="Properties\PublishProfiles\" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Ancorazor.API.Common\Ancorazor.API.Common.csproj" />
    <ProjectReference Include="..\Ancorazor.Entity\Ancorazor.Entity.csproj" />
    <ProjectReference Include="..\Ancorazor.Messages\Ancorazor.API.Messages.csproj" />
    <ProjectReference Include="..\Ancorazor.Service\Ancorazor.Service.csproj" />
    <ProjectReference Include="..\Siegrain.Common\Siegrain.Common.csproj" />
  </ItemGroup>
  <ProjectExtensions><VisualStudio><UserProperties appsettings_1json__JsonSchema="" /></VisualStudio></ProjectExtensions>
</Project>